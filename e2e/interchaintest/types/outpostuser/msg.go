/* Code generated by github.com/srdtrk/go-codegen, DO NOT EDIT. */
package outpostuser

import (
	"encoding/json"

	testtypes "github.com/JackalLabs/storage-outpost/e2e/interchaintest/types"
)

type InstantiateMsg struct {
	StorageOutpostAddress string `json:"storage_outpost_address"`
}

type ExecuteMsg struct {
	CallOutpost *ExecuteMsg_CallOutpost `json:"call_outpost,omitempty"`
	SaveOutpost *ExecuteMsg_SaveOutpost `json:"save_outpost,omitempty"`
	SaveNote    *ExecuteMsg_SaveNote    `json:"save_note,omitempty"`
}

type ExecuteMsg_CallOutpost struct {
	Msg *testtypes.ExecuteMsg `json:"msg,omitempty"`
}

type ExecuteMsg_SaveOutpost struct {
	Address string `json:"address"`
}

type ExecuteMsg_SaveNote struct {
	Note string `json:"note"`
}

// ToString returns a string representation of the message
func (m *ExecuteMsg) ToString() string {
	return toString(m)
}

// ToString returns a string representation of the message
func (m *ExecuteMsg_CallOutpost) ToString() string {
	return toString(m)
}

func toString(v any) string {
	jsonBz, err := json.Marshal(v)
	if err != nil {
		panic(err)
	}

	return string(jsonBz)
}
